---
- hosts: all
  gather_facts: true
  remote_user: root
  roles:
  - ../roles/common

  tasks:

  - name: mkdir /etc/pwx
    file:
      path: /etc/pwx
      state: directory
    when: "'portworx' in group_names"

  - name: check if Portworx OCI bundle already installed
    stat: path=/opt/pwx/bin/pxctl
    register: pxctl_installed
    when: "'portworx' in group_names"

  - name: install Portworx OCI bundle
    shell: docker run --entrypoint /runc-entry-point.sh --rm -i --privileged=true -v /opt/pwx:/opt/pwx -v /etc/pwx:/etc/pwx portworx/{{ PORTWORX_LICENSE }}:{{ PORTWORX_VERSION }}
    args:
      warn: no
    when: "'portworx' in group_names and pxctl_installed.stat.exists == False"

  - name: check if Portworx has been configured
    stat: path=/etc/pwx/config.json
    register: pxctl_configured
    when: "'portworx' in group_names"

  - name: configure Portworx OCI bundle
    shell: /opt/pwx/bin/px-runc install -c {{ hostvars[inventory_hostname]['PWX_STORAGE_GROUP'] }} -k {% for host in groups['etcd'] %}etcd:http://{{ hostvars[host].inventory_hostname }}:2379{{ '' if loop.last else ','}}{% endfor %}{% for device in hostvars[inventory_hostname]['DEVICES'] %} -s {{ device }}{% endfor %} -d {{ hostvars[inventory_hostname]['PWX_DATA'] }} -m {{ hostvars[inventory_hostname]['PWX_MGT'] }}
    args:
      warn: no
    when: "'portworx' in group_names and pxctl_configured.stat.exists == False"
    notify: systemctl-restart-portworx

  - name: check installed Portworx version if it was already installed
    shell: /opt/pwx/bin/pxctl --version
    args:
      warn: no
    changed_when: False
    register: portworx_rev
    when: "'portworx' in group_names and pxctl_installed.stat.exists == True"

  - name: upgrade Portworx if the PORTWORX_VERSION is different than already installed
    shell: docker run --entrypoint /runc-entry-point.sh --rm -i --privileged=true -v /opt/pwx:/opt/pwx -v /etc/pwx:/etc/pwx portworx/{{ PORTWORX_LICENSE }}:{{ PORTWORX_VERSION }} --upgrade
    args:
      warn: no
    when: "'portworx' in group_names and pxctl_installed.stat.exists == True and portworx_rev.stdout.find(PORTWORX_VERSION) == -1"
    notify: systemctl-restart-portworx

  handlers:

  - name: systemctl-restart-portworx
    systemd: 
      state: restarted
      daemon_reload: yes
      enabled: yes
      masked: no
      name: portworx
